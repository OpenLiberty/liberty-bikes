buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6.3'
    }
}

plugins {
    id 'com.avast.gradle.docker-compose' version "0.9.0"
}

task clean(type: Delete) {
  subprojects.each { dependsOn("${it.name}:clean") };
  delete 'build'
}

ext.hostname = 'localhost'
// Find the public IP address for this machine (if one exists)
NetworkInterface.getNetworkInterfaces()
.findAll { it.isUp() && !it.isLoopback() && !it.isVirtual() }
.each {
  it.getInetAddresses()
  .findAll { !it.isLoopbackAddress() && it instanceof Inet4Address }
  .each {
    if (hostname.equals('localhost')) {
      def hn = it.toString();
      hostname = hn.startsWith("/") ? hn.substring(1, hn.length()) : hn;
      // ${it} is in the format /<IP>, so only use http:/ instead of http://
    }
  }
}

task dockerStart {
    dependsOn 'composeUp'
}

task dockerStop {
    dependsOn 'composeDown'
}

composeBuild {
    subprojects.each {
        dependsOn("${it.name}:war")
    }
}

composeUp {
    dependsOn 'composeBuild'
}

subprojects {
    apply plugin: 'liberty'
    apply plugin: 'war'

    apply from: "$rootDir/integration-test.gradle"

    sourceCompatibility = 1.8

    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath 'net.wasdev.wlp.gradle.plugins:liberty-gradle-plugin:2.6.3'
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        providedCompile group: 'org.eclipse.microprofile', name: 'microprofile', version: '2.1'
        providedCompile group: 'javax', name: 'javaee-api', version: '8.0'
        testCompile group: 'junit', name: 'junit', version: '4.+'
        testCompile group: 'org.eclipse', name: 'yasson', version: '1.0.1'
        testCompile group: 'org.glassfish', name: 'javax.json', version: '1.1.+'
        testCompile group: 'org.testcontainers', name: 'testcontainers', version: '1.10.6'
        testCompile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.26'
        libertyRuntime group: 'io.openliberty', name: 'openliberty-runtime', version: '[19.0.0.1,)'
    }
    
    eclipse {
	    classpath {
	        defaultOutputDir =  file('build/classes/java/main')
	        file {
	            whenMerged {
	                entries.findAll { it.path.startsWith('src/test') }
	                       .each { it.output = "build/classes/java/test" }
	            }
	        }
	    }
	  }
    
    liberty {
        install {
            // use 1 liberty install for the whole repo
            baseDir = rootProject.buildDir
        }
    }

    clean.dependsOn 'libertyStop'
    libertyDebug.dependsOn 'libertyStop'    
    libertyStart.dependsOn 'libertyStop', 'test'
    libertyRun.dependsOn   'libertyStop'
    
    task debug { dependsOn 'libertyDebug' }
    task start { dependsOn 'libertyStart' }
    task stop  { dependsOn 'libertyStop'  }
    
    libertyStart.doLast {
        println "Application available at: ${appUrl}"
    }
    
    task open {
        doLast {
            java.awt.Desktop.desktop.browse "${appUrl}".toURI()
        }
    }
}
